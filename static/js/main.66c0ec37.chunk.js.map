{"version":3,"sources":["StepContext.js","FirstStep.js","SecondStep.js","ThirdStep.js","DisplayData.js","App.js","serviceWorker.js","index.js"],"names":["multiStepContext","React","createContext","StepContext","useState","currentStep","setStep","userData","setUserData","finalData","setFinalData","Provider","value","submitData","FirstStep","useContext","TextField","label","onChange","e","target","margin","variant","color","Button","onClick","SecondStep","ThirdStep","DisplayData","Container","TableContainer","style","display","justifyContent","Table","border","width","size","aria-label","TableHead","TableRow","backgroundColor","TableCell","TableBody","map","data","key","email","firstname","lastname","contact","country","district","city","landmark","postal_code","App","className","textDecoration","Stepper","activeStep","orientation","Step","StepLabel","step","showStep","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.66c0ec37.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport App from './App'\n\nexport const multiStepContext = React.createContext();\n\nconst StepContext = () => {\n\tconst [currentStep, setStep] = useState(1)\n\tconst [userData, setUserData] = useState([])\n\tconst [finalData, setFinalData] = useState([])\n\n\tfunction submitData(){\n\t\tsetFinalData(finalData=>[...finalData, userData])\n\t\tsetUserData('')\n\t\tsetStep(1)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<multiStepContext.Provider value={{currentStep, setStep, userData, setUserData, finalData, setFinalData, submitData}} >\n\t\t\t\t<App />\n\t\t\t</multiStepContext.Provider>\n\t\t</div>\n\t)\n}\n\nexport default StepContext","import React, { useContext } from 'react'\nimport {Button, TextField} from '@material-ui/core'\nimport {multiStepContext} from './StepContext'\n\nexport default function FirstStep(){\n\tconst { setStep, userData, setUserData } = useContext(multiStepContext)\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<TextField label=\"First Name\" value={userData['firstname']} onChange={(e) => setUserData({...userData,\"firstname\":e.target.value})} margin=\"normal\" variant=\"outlined\" color=\"secondary\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<TextField label=\"Last Name\" value={userData['lastname']} onChange={(e) => setUserData({...userData,\"lastname\":e.target.value})} margin=\"normal\" variant=\"outlined\" color=\"secondary\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<TextField label=\"Contact Number\" value={userData['contact']} onChange={(e) => setUserData({...userData,\"contact\":e.target.value})} margin=\"normal\" variant=\"outlined\" color=\"secondary\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button variant=\"contained\" onClick={()=>setStep(2)} color=\"primary\">Next</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React, {useContext} from 'react'\nimport {Button, TextField} from '@material-ui/core'\nimport {multiStepContext} from './StepContext'\n\nexport default function SecondStep(){\n\tconst { setStep, userData, setUserData } = useContext(multiStepContext)\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<TextField label=\"Email\" value={userData['email']} onChange={(e) => setUserData({...userData,\"email\":e.target.value})} margin=\"normal\" variant=\"outlined\" color=\"secondary\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<TextField label=\"Country\" value={userData['country']} onChange={(e) => setUserData({...userData,\"country\":e.target.value})} margin=\"normal\" variant=\"outlined\" color=\"secondary\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<TextField label=\"District\" value={userData['district']} onChange={(e) => setUserData({...userData,\"district\":e.target.value})} margin=\"normal\" variant=\"outlined\" color=\"secondary\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button variant=\"contained\" onClick={()=>setStep(1)} color=\"secondary\">Back</Button><span> </span>\n\t\t\t\t<Button variant=\"contained\" onClick={()=>setStep(3)} color=\"primary\">Next</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React, {useContext} from 'react'\nimport {Button, TextField} from '@material-ui/core'\nimport {multiStepContext} from './StepContext'\n\n\nexport default function ThirdStep(){\n\tconst { setStep, userData, setUserData, submitData } = useContext(multiStepContext)\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<TextField label=\"City\" value={userData['city']} onChange={(e) => setUserData({...userData,\"city\":e.target.value})} margin=\"normal\" variant=\"outlined\" color=\"secondary\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<TextField label=\"Landmark\" value={userData['landmark']} onChange={(e) => setUserData({...userData,\"landmark\":e.target.value})} margin=\"normal\" variant=\"outlined\" color=\"secondary\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<TextField label=\"Postal Code\" value={userData['postal_code']} onChange={(e) => setUserData({...userData,\"postal_code\":e.target.value})} margin=\"normal\" variant=\"outlined\" color=\"secondary\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button variant=\"contained\" onClick={()=>setStep(2)} color=\"secondary\">Back</Button><span> </span>\n\t\t\t\t<Button variant=\"contained\" onClick={submitData} color=\"primary\">Submit</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React, {useContext} from 'react'\nimport { Container,TableContainer,TableHead, TableRow, TableCell, TableBody, Table } from '@material-ui/core'\nimport { multiStepContext } from './StepContext'\n\nexport default function DisplayData(){\n\tconst { finalData } = useContext(multiStepContext)\n\treturn (\n\t\t<Container>\n\t\t<div>\n\t\t\t<TableContainer style={{display: 'flex', justifyContent:'center'}}>\n\t\t\t\t<Table border='1' style={ { width:'100%', justifyContent: 'center' }} size='small' aria-label='caption table' >\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow style={{backgroundColor:'burlywood', color:'aliceblue'}}>\n\t\t\t\t\t\t\t<TableCell>First Name</TableCell>\n\t\t\t\t\t\t\t<TableCell>Last Name</TableCell>\n\t\t\t\t\t\t\t<TableCell>Contact Number</TableCell>\n\t\t\t\t\t\t\t<TableCell>Email Address</TableCell>\n\t\t\t\t\t\t\t<TableCell>Country</TableCell>\n\t\t\t\t\t\t\t<TableCell>District</TableCell>\n\t\t\t\t\t\t\t<TableCell>City</TableCell>\n\t\t\t\t\t\t\t<TableCell>Landmark</TableCell>\n\t\t\t\t\t\t\t<TableCell>Postal Code</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{finalData.map(data => (\n\t\t\t\t\t\t\t<TableRow key={data.email}>\n\t\t\t\t\t\t\t\t<TableCell>{data.firstname}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{data.lastname}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{data.contact}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{data.email}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{data.country}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{data.district}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{data.city}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{data.landmark}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{data.postal_code}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t</div>\n\t\t\t</Container>\n\t)\n}","import React, {useContext} from 'react';\nimport './App.css';\nimport FirstStep from './FirstStep'\nimport SecondStep from './SecondStep'\nimport ThirdStep from './ThirdStep'\nimport { Stepper, Step, StepLabel } from '@material-ui/core'\nimport { multiStepContext } from './StepContext'\nimport DisplayData from './DisplayData'\n\nfunction App() {\n\n  const { currentStep, finalData } = useContext(multiStepContext)\n  function showStep(step){\n    switch (step){\n      case 1:\n        return <FirstStep />\n      case 2:\n        return <SecondStep />\n      case 3:\n        return <ThirdStep />\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1 style={{color:'black', textDecoration:'none'}}>React Multistep Form</h1>\n        <div className='center-stepper'>\n          <Stepper activeStep={currentStep-1} orientation=\"horizontal\">\n            <Step>\n              <StepLabel></StepLabel>\n            </Step>\n            <Step>\n                <StepLabel></StepLabel>\n              </Step>\n            <Step>\n              <StepLabel></StepLabel>\n            </Step>\n          </Stepper>\n        { showStep(currentStep) }\n        <br />\n        { finalData.length > 0 ? <DisplayData /> : '' }\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport StepContext from './StepContext'\n\nReactDOM.render(\n  <StepContext>\n\t  <React.StrictMode>\n\t    <App />\n\t  </React.StrictMode>\n  </StepContext>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}